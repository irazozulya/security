using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SecurityLabs
{
	public static class Task1
	{
		private static readonly List<char> _lowercaseLetters = new List<char> { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' };

		private const decimal _lowercasePercent = (decimal)0.6;

		private const decimal _eLetterFrequency = (decimal)0.1;

		private const decimal _tLetterFrequency = (decimal)0.08;

		public static void Exec()
		{
			/*var input

			var numOfBytes = input.Length / 8;
			var bytes = new byte[numOfBytes];

			for (int i = 0; i < numOfBytes; ++i)
			{
				bytes[i] = Convert.ToByte(input.Substring(8 * i, 8), 2);
			}

			var inputString = System.Text.Encoding.ASCII.GetString(
				Convert.FromBase64String(
					System.Text.Encoding.ASCII.GetString(bytes)));

			Console.WriteLine(inputString);*/

			/*var inputString = "7958401743454e1756174552475256435e59501a5c524e176f786517545e475f5245191772195019175e4317445f58425b531743565c521756174443455e595017d5b7ab5f525b5b58174058455b53d5b7aa175659531b17505e41525917435f52175c524e175e4417d5b7ab5c524ed5b7aa1b174f584517435f5217515e454443175b524343524517d5b7ab5fd5b7aa17405e435f17d5b7ab5cd5b7aa1b17435f5259174f584517d5b7ab52d5b7aa17405e435f17d5b7ab52d5b7aa1b17435f525917d5b7ab5bd5b7aa17405e435f17d5b7ab4ed5b7aa1b1756595317435f5259174f58451759524f4317545f564517d5b7ab5bd5b7aa17405e435f17d5b7ab5cd5b7aa175650565e591b17435f525917d5b7ab58d5b7aa17405e435f17d5b7ab52d5b7aa1756595317445817585919176e5842175a564e17424452175659175e5953524f1758511754585e59545e53525954521b177f565a5a5e595017535e4443565954521b177c56445e445c5e17524f565a5e5956435e58591b17444356435e44435e54565b17435244434417584517405f564352415245175a52435f5853174e5842175152525b174058425b5317445f584017435f52175552444317455244425b4319";

			var inputStr = convertHexToAscii(inputString);

			//tryFindXorKey(inputStr);

			var key = 55;

			Console.WriteLine(decodeXorCeasar(key, inputStr));*/

			//Now try a repeating-key XOR cipher.
			//E.g. it should take a string "hello world" and, given the key is "key",
			//xor the first letter "h" with "k", then xor "e" with "e", then "l" with "y", and then xor next char "l" with 'k" again, then "o" with "e" and so on.
			//You may use an index of coincidence, Hamming distance, Kasiski examination, statistical tests or whatever method you feel would show the best result.

			/*var inputString = "G0IFOFVMLRAPI1QJbEQDbFEYOFEPJxAfI10JbEMFIUAAKRAfOVIfOFkYOUQFI15ML1kcJFUeYhA4IxAeKVQZL1VMOFgJbFMDIUAAKUgFOElMI1ZMOFgFPxADIlVMO1VMO1kAIBAZP1VMI14ANRAZPEAJPlMNP1VMIFUYOFUePxxMP19MOFgJbFsJNUMcLVMJbFkfbF8CIElMfgZNbGQDbFcJOBAYJFkfbF8CKRAeJVcEOBANOUQDIVEYJVMNIFwVbEkDORAbJVwAbEAeI1INLlwVbF4JKVRMOF9MOUMJbEMDIVVMP18eOBADKhALKV4JOFkPbFEAK18eJUQEIRBEO1gFL1hMO18eJ1UIbEQEKRAOKUMYbFwNP0RMNVUNPhlAbEMFIUUALUQJKBANIl4JLVwFIldMI0JMK0INKFkJIkRMKFUfL1UCOB5MH1UeJV8ZP1wVYBAbPlkYKRAFOBAeJVcEOBACI0dAbEkDORAbJVwAbF4JKVRMJURMOF9MKFUPJUAEKUJMOFgJbF4JNERMI14JbFEfbEcJIFxCbHIJLUJMJV5MIVkCKBxMOFgJPlVLPxACIxAfPFEPKUNCbDoEOEQcPwpDY1QDL0NCK18DK1wJYlMDIR8II1MZIVUCOB8IYwEkFQcoIB1ZJUQ1CAMvE1cHOVUuOkYuCkA4eHMJL3c8JWJffHIfDWIAGEA9Y1UIJURTOUMccUMELUIFIlc=";

			var inputStrringAscii = System.Text.Encoding.ASCII.GetString(
				Convert.FromBase64String(inputString));

			//TryFindVigenereKeyLength(inputStrringAscii);

			//TryFindVigenereXorKey(inputStrringAscii);

			//L0l - key

			Console.WriteLine(DecodeVigenereXorByKeys(76, 48, 108, inputStrringAscii));*/

			//Write a code to attack some simple substitution cipher.
			//To reduce the complexity of this one we will use only uppercase letters, so the keyspace is only 26!
			//To get this one right automatically you will probably need to use some sort of genetic algorithm
			//(which worked the best last year), simulated annealing or gradient descent.
			//Seriously, write it right now, you will need it to decipher the next one as well.Bear in mind, there's no spaces.
			//https://docs.google.com/document/d/1HY7Dl-5itYD3C_gkueBvvBFpT4CecGPiR30BsARlTpQ/edit?usp=shari

			var inputString = "EFFPQLEKVTVPCPYFLMVHQLUEWCNVWFYGHYTCETHQEKLPVMSAKSPVPAPVYWMVHQLUSPQLYWLASLFVWPQLMVHQLUPLRPSQLULQESPBLWPCSVRVWFLHLWFLWPUEWFYOTCMQYSLWOYWYETHQEKLPVMSAKSPVPAPVYWHEPPLUWSGYULEMQTLPPLUGUYOLWDTVSQETHQEKLPVPVSMTLEUPQEPCYAMEWWYTYWDLUULTCYWPQLSEOLSVOHTLUYAPVWLYGDALSSVWDPQLNLCKCLRQEASPVILSLEUMQBQVMQCYAHUYKEKTCASLFPYFLMVHQLUPQLHULIVYASHEUEDUEHQBVTTPQLVWFLRYGMYVWMVFLWMLSPVTTBYUNESESADDLSPVYWCYAMEWPUCPYFVIVFLPQLOLSSEDLVWHEUPSKCPQLWAOKLUYGMQEUEMPLUSVWENLCEWFEHHTCGULXALWMCEWETCSVSPYLEMQYGPQLOMEWCYAGVWFEBECPYASLQVDQLUYUFLUGULXALWMCSPEPVSPVMSBVPQPQVSPCHLYGMVHQLUPQLWLRPOEDVMETBYUFBVTTPENLPYPQLWLRPTEKLWZYCKVPTCSTESQPBYMEHVPETCMEHVPETZMEHVPETKTMEHVPETCMEHVPETT";

			var geneticKeySearcher = new GeneticKeySearcher(inputString, 1000);
			var key = geneticKeySearcher.GetKey();
			var bestValue = geneticKeySearcher.Decode(key);

			Console.WriteLine(bestValue);
		}

		#region Line 1

		private static void tryFindXorKey(string inputString)
		{
			for (int i = 100; i < 117; i++)
			{
				Console.WriteLine($"---------------------------------------{i}\n{decodeXorCeasar(i, inputString)}\n");
			}
		}

		private static string decodeXorCeasar(int key, string inputString)
		{
			var value = string.Empty;

			for (int j = 0; j < inputString.Length; j++)
			{
				value += Convert.ToChar(key ^ Convert.ToInt32(inputString[j]));
			}

			return value;
		}

		private static string convertHexToAscii(string inputString)
		{
			string ascii = string.Empty;

			for (int i = 0; i < inputString.Length; i += 2)
			{
				var hs = inputString.Substring(i, 2);
				ascii += Convert.ToChar(Convert.ToInt32(hs, 16));
			}

			return ascii;
		}

		#endregion

		#region Line 2

		public static void TryFindVigenereXorKey(string inputString)
		{
			for (int i = 0; i < 128; i++)
			{
				for (int j = 0; j < 128; j++)
				{
					for (int k = 0; k < 128; k++)
					{
						var key = string.Concat(Convert.ToChar(i), Convert.ToChar(j), Convert.ToChar(k)/*, Convert.ToChar(h)*/);

						var value = DecodeVigenereXorByKeys(i, j, k, inputString);
						if (getELetterFrequency(value) >= _eLetterFrequency &&
							getTLetterFrequency(value) >= _tLetterFrequency)
						{
							Console.WriteLine($"---------------------------------------{key}\n{value}");
						}
					}
				}
			}
		}

		public static string DecodeVigenereXorByKeys(int i, int j, int k, string inputString)
		{
			var value = string.Empty;
			for (int f = 0; f < inputString.Length - 2; f += 3)
			{
				value += Convert.ToChar(i ^ inputString[f]);
				value += Convert.ToChar(j ^ inputString[f + 1]);
				value += Convert.ToChar(k ^ inputString[f + 2]);
				//value += Convert.ToChar(h ^ inputString[f + 3]);
			}

			/*for (int h = 0; h < 128; h++)
			{

			}*/

			return value;
		}

		public static void TryFindVigenereKeyLength(string inputString)
		{
			var vigenereDict = new Dictionary<int, int>();

			for (int i = 1; i < 30; i++)
			{
				var newInputString = string.Concat(inputString.Substring(i), inputString.Substring(0, i));

				var counter = 0;

				for (int j = 0; j < inputString.Length; j++)
				{
					if (inputString[j] == newInputString[j])
					{
						counter++;
					}
				}

				vigenereDict.Add(i, counter);
			}

			foreach (var pair in vigenereDict.OrderBy(p => p.Value))
			{
				Console.WriteLine($"{pair.Key} - {pair.Value}");
			}
		}

		private static void tryDecodeByFrequencies(string inputString)//These are some bad tries to decode
		{
			var charactersEncryptionDict = new Dictionary<int, Dictionary<char, int>>();

			for (int i = 0; i < inputString.Length; i++)
			{
				var index = i % 4;
				if (!charactersEncryptionDict.TryGetValue(index, out var frequencyDict))
				{
					frequencyDict = new Dictionary<char, int>();
					charactersEncryptionDict.Add(index, frequencyDict);
				}

				var character = inputString[i];

				if (!frequencyDict.TryGetValue(character, out var frequency))
				{
					frequencyDict.Add(character, 1);
					continue;
				}

				frequencyDict[character] = frequency + 1;
			}

			var decodingDict = new Dictionary<int, Dictionary<char, char>>();

			foreach (var indexPair in charactersEncryptionDict)
			{
				//Console.WriteLine($"\n\n\n{indexPair.Key}\n\n\n");

				var decodingCharDict = new Dictionary<char, char>();
				decodingDict.Add(indexPair.Key, decodingCharDict);

				var counter = -1;

				foreach (var pair in indexPair.Value.OrderByDescending(p => p.Value))
				{
					counter++;
					if (counter > 2)
					{
						continue;
					}

					Console.WriteLine();
					switch (counter)
					{
						case 0:
							decodingCharDict.Add(pair.Key, 'e');
							continue;
						case 1:
							decodingCharDict.Add(pair.Key, 't');
							continue;
						case 2:
							decodingCharDict.Add(pair.Key, 'a');
							continue;
					}

					//Console.WriteLine($"{pair.Key} - {pair.Value}");
				}
			}

			var newString = string.Empty;
			for (int i = 0; i < inputString.Length; i++)
			{
				var index = i % 4;
				var decodingCharDict = decodingDict[index];

				var character = inputString[i];

				newString += decodingCharDict.TryGetValue(character, out var decodedChar)
					? decodedChar
					: character;
			}
		}

		private static decimal getLowercasePercent(string value)
		{
			return (decimal)value.Where(c => _lowercaseLetters.Contains(c)).Count() / value.Length;
		}

		private static decimal getELetterFrequency(string value)
		{
			return (decimal)value.Where(c => c == 'e' || c == 'E').Count() / value.Length;
		}

		private static decimal getTLetterFrequency(string value)
		{
			return (decimal)value.Where(c => c == 't' || c == 'T').Count() / value.Length;
		}

		#endregion

		#region Line 3

		private class GeneticKeySearcher
		{
			private static readonly List<char> _uppercaseLetters = new List<char> { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' };
			
			private static readonly HashSet<char> _consonantUppercaseLetters = new HashSet<char> { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Z' };

			private static readonly Dictionary<char, decimal> _letterFrequencies = new Dictionary<char, decimal>
			{
				{ 'A', (decimal)0.08167 },
				{ 'B', (decimal)0.01492 },
				{ 'C', (decimal)0.02782 },
				{ 'D', (decimal)0.04253 },
				{ 'E', (decimal)0.12702 },
				{ 'F', (decimal)0.02228 },
				{ 'G', (decimal)0.02015 },
				{ 'H', (decimal)0.06094 },
				{ 'I', (decimal)0.06966 },
				{ 'J', (decimal)0.00153 },
				{ 'K', (decimal)0.00772 },
				{ 'L', (decimal)0.04025 },
				{ 'M', (decimal)0.02406 },
				{ 'N', (decimal)0.06749 },
				{ 'O', (decimal)0.07507 },
				{ 'P', (decimal)0.01929 },
				{ 'Q', (decimal)0.00095 },
				{ 'R', (decimal)0.05987 },
				{ 'S', (decimal)0.06327 },
				{ 'T', (decimal)0.09056 },
				{ 'U', (decimal)0.02758 },
				{ 'V', (decimal)0.00978 },
				{ 'W', (decimal)0.02360 },
				{ 'X', (decimal)0.00150 },
				{ 'Y', (decimal)0.01974 },
				{ 'Z', (decimal)0.00074 }
			};

			private static readonly HashSet<string> _commonSyllablesAndWords = new HashSet<string>
			{
				"HE",
				"THE",
				"IN",
				"AND",
				"ALL",
				"ARE",
				"IS",
				"YOU",
				"DO",
				"ED",
				"IT",
				"TO",
				"TH",
				"ER",
				"AS",
				"AT",
				"AN",
				"RE",
				"ND",
				"OU",
				"EN",
				"ON",
				"HA",
				"OR",
				"ING",
				"HER",
				"VER",
				"WAS",
				"HAT",
				"FOR",
				"NOT",
				"THI",
				"THA",
				"HIS",
				"ENT",
				"ION",
				"ITH",
				"ERE",
				"WIT",
				"ALL",
				"EVE",
				"OUL",
				"ULD",
				"TIO",
				"TER",
				"HAD",
				"HEN",
				"ERA",
				"ARE",
				"HIN",
				"OUR",
				"SHO",
				"TED",
				"ALL",
				"AKE"
			};

			private string _cipher;

			private int _iterationsNumber;

			public GeneticKeySearcher(string cipher, int iterationsNumber)
			{
				_cipher = cipher;
				_iterationsNumber = iterationsNumber;
			}

			public Dictionary<char, char> GetKey()
			{
				var keys = new List<Dictionary<char, char>>();
				var key1 = new Dictionary<char, char>();
				var tIndex = -1;//I know there will be word "substitution", so I'll be a little sly
				for (int i = 0; i < _cipher.Length - 4; i++)
				{
					if (tIndex != -1)
					{
						continue;
					}

					var c1 = _cipher[i];
					var c2 = _cipher[i + 2];

					if (c1 != c2)
					{
						continue;
					}

					var c3 = _cipher[i + 4];

					if (c1 != c3)
					{
						continue;
					}

					tIndex = i;
					key1.Add(_cipher[i - 4], 'S');
					key1.Add(_cipher[i - 3], 'U');
					key1.Add(_cipher[i - 2], 'B');
					key1.Add(_cipher[i], 'T');
					key1.Add(_cipher[i + 1], 'I');
					key1.Add(_cipher[i + 6], 'O');
					key1.Add(_cipher[i + 7], 'N');
				}
				
				var key2 = new Dictionary<char, char>();

				var frequencyDict = _letterFrequencies.ToDictionary(p => p.Key, p => 0);

				for (int i = 0; i < _cipher.Length; i++)
				{
					var character = _cipher[i];

					frequencyDict[character] += 1;
				}

				var sortedFrequencyDict = frequencyDict.OrderBy(p => p.Value).ToList();
				var sortedLetterFrequencies = _letterFrequencies.OrderBy(p => p.Value).ToList();
				
				for (int i = 0; i < 26; i++)
				{
					key2.Add(sortedFrequencyDict[i].Key, sortedLetterFrequencies[i].Key);
				}

				if (tIndex == -1)
				{
					key1 = _uppercaseLetters.ToDictionary(c => c, c => Convert.ToChar(90 - _uppercaseLetters.IndexOf(c)));
				}
				else
				{
					sortedFrequencyDict.RemoveAll(p => key1.Keys.Contains(p.Key));
					sortedLetterFrequencies.RemoveAll(p => key1.Values.Contains(p.Key));
					for (int i = 0; i < 19; i++)
					{
						key1.Add(sortedFrequencyDict[i].Key, sortedLetterFrequencies[i].Key);
					}
				}

				keys.Add(key1);
				keys.Add(key2);

				keys.Add(_uppercaseLetters.ToDictionary(c => c, c => c));

				var key4 = new Dictionary<char, char>();
				var rand = new Random();

				foreach (var character in _uppercaseLetters)
				{
					var key = _uppercaseLetters.OrderBy(p => rand.Next()).First(c => !key4.ContainsKey(c));
					key4.Add(key, character);
				}

				keys.Add(key4);

				for (int i = 0; i < _iterationsNumber; i++)
				{
					var fitnessesToKeys = new Dictionary<Dictionary<char, char>, decimal>();

					var threeBestKeys = keys.OrderBy(k => getKeyFitness(k)).Take(3);
					keys = threeBestKeys.ToList();

					var newKey = mutate(keys[0], keys[2]);

					keys.Add(newKey);
				}

				return keys.OrderBy(k => getKeyFitness(k)).First();
			}


			public string Decode(Dictionary<char, char> key)
			{
				var value = string.Empty;

				foreach (var character in _cipher)
				{
					value += key[character];
				}

				return value;
			}

			private Dictionary<char, char> getBetterKey(Dictionary<char, char> key1, Dictionary<char, char> key2)
			{
				var fitness1 = getKeyFitness(key1);

				var fitness2 = getKeyFitness(key2);

				return fitness1 > fitness2
					? key2
					: key1;
			}

			private decimal getKeyFitness(Dictionary<char, char> key)
			{
				var value = Decode(key);

				var consonantParts = string.Empty;

				var part = string.Empty;
				var syllable = string.Empty;

				var points = 0;

				foreach (var character in value)
				{
					syllable += character;

					if (syllable.Length == 2)
					{
						if (_commonSyllablesAndWords.Contains(syllable))
						{
							points += 4;
						}
					}

					if (syllable.Length == 3)
					{
						if (_commonSyllablesAndWords.Contains(syllable))
						{
							points += 6;
						}

						syllable = syllable.Substring(1, 2);

						if (_commonSyllablesAndWords.Contains(syllable))
						{
							points += 4;
						}
					}

					if (_consonantUppercaseLetters.Contains(character))
					{
						part += character;
						continue;
					}

					if (part.Length > 3)
					{
						consonantParts += part;
					}

					part = string.Empty;
				}

				return (decimal)(consonantParts.Length - points) / 10 + key.Sum(p => Math.Abs(_letterFrequencies[p.Value] - getLetterFrequency(p.Value, value))) * 100;
			}

			private Dictionary<char, char> mutate(Dictionary<char, char> key1, Dictionary<char, char> key2)
			{
				var result = new Dictionary<char, char>();

				var value1 = Decode(key1);
				var value2 = Decode(key2);

				foreach (var pair in _letterFrequencies)
				{
					decimal points1 = 0;
					decimal points2 = 0;

					foreach (var syllable in _commonSyllablesAndWords.Where(s => s.Contains(pair.Key)))
					{
						if (value1.Contains(syllable))
						{
							points1 += syllable.Length;
						}
						if (value2.Contains(syllable))
						{
							points2 += syllable.Length;
						}
					}

					var key1PartFitness = points1 + Math.Abs(pair.Value - getLetterFrequency(pair.Key, value1));
					var key2PartFitness = points2 + Math.Abs(pair.Value - getLetterFrequency(pair.Key, value2));

					if (key1PartFitness > key2PartFitness)
					{
						addKeyPart(pair.Key, result, key2, key1);
					}
					else
					{
						addKeyPart(pair.Key, result, key1, key2);
					}
				}

				return result;
			}

			private void addKeyPart(char character, Dictionary<char, char> result, Dictionary<char, char> key1, Dictionary<char, char> key2)
			{
				var key = key1.First(p => p.Value == character).Key;

				if (!result.ContainsKey(key))
				{
					result.Add(key, character);
					return;
				}

				key = key2.First(p => p.Value == character).Key;

				if (!result.ContainsKey(key))
				{
					result.Add(key, character);
					return;
				}

				result.Add(_letterFrequencies.First(p => !result.ContainsKey(p.Key)).Key, character);
			}

			private decimal getLetterFrequency(char letter, string value)
			{
				return (decimal)value.Where(c => c == letter).Count() / value.Length;
			}
		}

		#endregion
	}
}
